@startuml
abstract Enemigo {
- velocidad: int
- dañoCausado: int
- energía: int
- creditosOtorgados: int
- pasarela: Pasarela
- coordenada: Coordenada
+ recibirDaño()
+ cantidadCreditosOtorgados(): int
+ moverEnemigo()
}

class Hormiga {
+ cantidadCreditosOtorgados(): int
+ moverEnemigo()
}

class Araña {
+ cantidadCreditosOtorgados(): int
+ moverEnemigo()
}

class Juego {
- mapa: Mapa
- numeroDeTurno: int
+ avanzarTurno()
+ agregarEnemigo()
+ juegoTerminado()
}

class Inicializador {
+ agregarJugador()
+ iniciarPartida()
}

abstract Defensa {
- nombre
- costo
- tiempoDeConstruccion
- turnoEnElQueSeInicioLaConstruccion
- rangoDeAtaque
- danio
- parcela
+ atacarEnemigo(enemigo: Enemigo)
+ actualizarEstado(numeroDeTurno: int)
+ construir(parcela:Parcela, numeroDeTurno:int)
}

class TorreBlanca {
+ atacarEnemigo(enemigo: Enemigo)
+ construir(parcela:Parcela, numeroDeTurno:int)
}

class TorrePlateada {
+ atacarEnemigo(enemigo: Enemigo)
+ construir(parcela:Parcela, numeroDeTurno:int)
}

class Jugador {
- nombre
- cantidadDeCreditos: int
- puntosDeVida: int
+ descontarCreditos()
+ agregarCreditos()
+ generarConstruccion()
+ actualizarDefensasAlFinalizarTurno()
+ descontarPuntosDeVida()
}


interface AccionesDefensa {
+atacarEnemigo(e: Enemigo, rangoDeAtaque, daño, coordenadasDefensa)
+estaTerminada()
}

class EnConstruccion {
+atacarEnemigo(e: Enemigo, rangoDeAtaque, daño, coordenadasDefensa)
+estaTerminada()
}

class Terminada {
+atacarEnemigo(e: Enemigo, rangoDeAtaque, daño, coordenadasDefensa)
+estaTerminada()
}


interface AccionesEnemigo {
+ mover(velocidad:int)
}

class Vivo {
+ mover(velocidad:int)
}

class Muerto {
+ mover(velocidad:int)
}

AccionesEnemigo <|.. Vivo
AccionesEnemigo <|.. Muerto

AccionesDefensa <|.. EnConstruccion
AccionesDefensa <|.. Terminada

Defensa <|-- TorreBlanca
Defensa <|-- TorrePlateada



Enemigo <|-- Hormiga
Enemigo <|-- Araña

Juego <- Inicializador
Juego "1" --> "0..*" Enemigo
Jugador <- Juego
Jugador "1" --> "0..*" Defensa
Defensa .> Enemigo
Defensa --> AccionesDefensa
Enemigo --> AccionesEnemigo
@enduml
